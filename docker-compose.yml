version: '3.6'
services:

  postgres:
    image: mdillon/postgis
    restart: always
    ports:
    - "5434:5432"
    volumes:
    - db_data:/var/lib/postgresql/data

  graphile:
    image: graphile/postgraphile
    ports:
      - "5000:5000"
    command: cli.js --connection postgres://postgres:@postgres:5432/postgres
      --watch --enhance-graphiql  --simple-collections only
      --schema asbestdaken,example,reclame,sportparken
      --skip-plugins graphile-build:NodePlugin
    environment:
      DATABASE_URL: postgres://postgres:@postgres:5432/postgres

  # graphql-engine:
  #   image: hasura/graphql-engine:v1.0.0-beta.6
  #   ports:
  #   - "8088:8080"
  #   depends_on:
  #   - "postgres"
  #   restart: always
  #   environment:
  #     HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:@postgres:5432/postgres
  #     HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
  #     HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
  #     ## uncomment next line to set an admin secret
  #     # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey

  nodejs:
    image: node:12
    ports:
    - "8765:8080"
    environment:
    - PORT=8080
    - DATABASE_URL=postgres://postgres:@postgres:5432/postgres
    - WORKER_URL=http://worker:8766/mapfiles

    command: node /app/server.js
    volumes:
    - ./:/app

  worker:
    build: ./worker
    environment:
      FLASK_APP: web.py
    ports:
      - "8766:8766"

  mapserver:
    build: ./mapserver
    volumes:
      - ./mapserver:/srv/mapserver
    ports:
      - "8090:80"

  dynapi:
    build: ./dynapi
    environment:
      - DATABASE_URL=postgres://postgres:@postgres:5432/postgres
      - ROUTES_ROOT_DIR=/data
    ports:
      - "6543:6543"
    command:
      # sleep infinity
      gunicorn api:app -w 2 -b 0.0.0.0:6543
    volumes:
    - ./dynapi:/dynapi
    - ./data:/data

volumes:
  db_data:
